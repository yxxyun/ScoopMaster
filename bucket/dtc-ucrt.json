{
    "version": "1.6.1",
    "description": "Device Tree Compiler and YAML library for Windows (mignw-ucrt)",
    "homepage": "https://packages.msys2.org/package/mingw-w64-ucrt-x86_64-dtc",
    "license": "GPL-2.0-or-later",
    "architecture": {
        "64bit": {
            "url": [
                "https://mirror.msys2.org/mingw/ucrt64/mingw-w64-ucrt-x86_64-dtc-1.6.1-2-any.pkg.tar.zst",
                "https://mirror.msys2.org/mingw/ucrt64/mingw-w64-ucrt-x86_64-libyaml-0.2.5-1-any.pkg.tar.zst"
            ],
            "hash": [
                "65e765169ec5481a0813cc1b61a25ab5a22eb8d9559647f8993b2ab300622720",
                "640e1b51205b01f65b53645b1703700cea71122c09a17c9b21ca8c608181b536"
            ]
        }
    },
    "pre_install": [
        "movedir \"$dir\\ucrt64\" \"$dir\" | Out-Null",
        "$keep_dirs = @(\"$dir\\bin\",",
        "                \"$dir\\share\")",
        "",
        "Get-ChildItem \"$dir\" -Dir                                    |",
        "    Select-Object -ExpandProperty FullName                     |",
        "    Sort-Object Length -Descending                             |",
        "    Where-Object {$_ -notin $keep_dirs }                       |",
        "    ForEach-Object { if ((Test-Path $_ -Type Container) -and (Get-ChildItem $_)) {  Remove-Item $_ -Recurse -Force } }"
    ],
    "bin": "bin\\dtc.exe",
    "checkver": {
        "script": [
            "$base_url = 'https://packages.msys2.org/package/'",
            "$version_regex = \"Version:.+\\s+<.+>([\\d.-]+)\"",
            "",
            "$dtc_page = (Invoke-WebRequest \"${base_url}mingw-w64-ucrt-x86_64-dtc\" -UseBasicParsing).Content",
            "$libyaml_page = (Invoke-WebRequest \"${base_url}mingw-w64-ucrt-x86_64-libyaml\" -UseBasicParsing).Content",
            "",
            "if(!($dtc_page -match $version_regex)) { error \"No match found for version\"; continue }",
            "$scriptver = $matches[1]",
            "if(!($libyaml_page -match $version_regex)) { error \"No match found for version\"; continue }",
            "$libyaml_version = $matches[1]",
            "",
            "Write-Output $scriptver $libyaml_version"
        ],
        "regex": "(?<version>[\\d.-]+)\\s(?<libyamlversion>[\\d.-]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": [
                    "https://mirror.msys2.org/mingw/ucrt64/mingw-w64-ucrt-x86_64-dtc-$matchVersion-any.pkg.tar.zst",
                    "https://mirror.msys2.org/mingw/ucrt64/mingw-w64-ucrt-x86_64-libyaml-$matchLibyamlversion-any.pkg.tar.zst"
                ],
                "hash": [
                    {
                        "url": "https://packages.msys2.org/package/mingw-w64-ucrt-x86_64-dtc",
                        "regex": "SHA256:.+\\s+<.+>$sha256"
                    },
                    {
                        "url": "https://packages.msys2.org/package/mingw-w64-ucrt-x86_64-libyaml",
                        "regex": "SHA256:.+\\s+<.+>$sha256"
                    }
                ]
            }
        }
    }
}
