{
    "##": [
        "Why here? I want multiple PowerShell versions side by side.",
        "Strategy: Add current stable version of PowerShell to PATH (env_add_path), the others as Scoop shims (bin).",
        "7.3 was deprecated 2024-05-08, thus checkver and autoupdate is removed."
    ],
    "version": "7.3.12",
    "description": "Cross-platform automation and configuration tool/framework, known as Powershell Core, that works well with existing tools and is optimized for dealing with structured data.",
    "homepage": "https://github.com/PowerShell/PowerShell",
    "license": "MIT",
    "architecture": {
        "32bit": {
            "url": "https://github.com/PowerShell/PowerShell/releases/download/v7.3.12/PowerShell-7.3.12-win-x86.zip",
            "hash": "5D660E9A578F7DBFECDF01A19AE0163AA438E1C15061FAC8B32FBE0BDE1A2B22"
        },
        "64bit": {
            "url": "https://github.com/PowerShell/PowerShell/releases/download/v7.3.12/PowerShell-7.3.12-win-x64.zip",
            "hash": "C515C7C1B5BF1E3B5AA991274E89EA0DAA8E8BD5CA08AD554ADBC514E90005F4"
        },
        "arm64": {
            "url": "https://github.com/PowerShell/PowerShell/releases/download/v7.3.12/PowerShell-7.3.12-win-arm64.zip",
            "hash": "8D2C70B6C2BADFCA3CC9D81C32021FA19C30CA61C0ABE74E6060B4A65D57ED3D"
        }
    },
    "post_install": [
        "$Directories = [string[]](",
        "    [System.IO.Path]::Combine($dir,'Modules','Microsoft.PowerShell.PSResourceGet')",
        ")",
        "$Directories.ForEach{",
        "    if ([System.IO.Directory]::Exists($_)) {",
        "        $null = [System.IO.Directory]::Delete($_,$true)",
        "    }",
        "}"
    ],
    "bin": [
        [
            "pwsh.exe",
            "pwsh73"
        ]
    ],
    "shortcuts": [
        [
            "pwsh.exe",
            "PowerShell 7.3",
            "-WorkingDirectory ~"
        ]
    ]
}
