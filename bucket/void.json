{
    "version": "1.99.30038",
    "description": "Void is an open source Cursor alternative.",
    "homepage": "https://voideditor.com/",
    "license": "Apache-2.0",
    "notes": [
        "Add Void as a context menu option by running 'reg import \"$dir\\install-context.reg\"'",
        "For file associations, run 'reg import \"$dir\\install-associations.reg\"'"
    ],
    "architecture": {
        "64bit": {
            "url": "https://github.com/voideditor/binaries/releases/download/1.99.30038/Void-win32-x64-1.99.30038.zip",
            "hash": "48d25361126eadeb4f82ec699a48ce6a41f18a724788ba00a242b329fbcd8319"
        },
        "arm64": {
            "url": "https://github.com/voideditor/binaries/releases/download/1.99.30038/Void-win32-arm64-1.99.30038.zip",
            "hash": "d0805b2f82b1760d1a90ab9aff290065a05c320f9806bcbee8fd8d67170574e9"
        }
    },
    "env_add_path": "bin",
    "shortcuts": [
        [
            "Void.exe",
            "Void"
        ]
    ],
    "persist": "data",
    "post_install": [
        "$dirpath = \"$dir\".Replace('\\', '\\\\')",
        "$exepath = \"$dir\\Void.exe\".Replace('\\', '\\\\')",
        "'install-associations', 'uninstall-associations', 'install-context', 'uninstall-context' | ForEach-Object {",
        "  if (Test-Path \"$bucketsdir\\extras\\scripts\\vscode\\$_.reg\") {",
        "    $content = Get-Content \"$bucketsdir\\extras\\scripts\\vscode\\$_.reg\"",
        "    $content = $content.Replace('$codedir', $dirpath)",
        "    $content = $content.Replace('$code', $exepath)",
        "    $content = $content.Replace('&Code', '&Void')",
        "    if ($global) {",
        "      $content = $content.Replace('HKEY_CURRENT_USER', 'HKEY_LOCAL_MACHINE')",
        "    }",
        "    $content | Set-Content -Path \"$dir\\$_.reg\"",
        "  }",
        "}",
        "if (!(Test-Path \"$dir\\data\\extensions\") -and (Test-Path \"$env:USERPROFILE\\.void-editor\\extensions\")) {",
        "    info '[Portable Mode] Copying extensions...'",
        "    Copy-Item \"$env:USERPROFILE\\.void-editor\\extensions\" \"$dir\\data\" -Recurse",
        "}",
        "if (!(Test-Path \"$dir\\data\\user-data\") -and (Test-Path \"$env:AppData\\Void\")) {",
        "    info '[Portable Mode] Copying user data...'",
        "    Copy-Item \"$env:AppData\\Void\" \"$dir\\data\\user-data\" -Recurse",
        "}",
        "$extensions_file = \"$dir\\data\\extensions\\extensions.json\"",
        "if ((Test-Path \"$extensions_file\")) {",
        "    info 'Adjusting path in extensions file...'",
        "    (Get-Content \"$extensions_file\") -replace '(?<=void(/|\\\\\\\\)).*?(?=(/|\\\\\\\\)data(/|\\\\\\\\)extensions)', $version | Set-Content \"$extensions_file\"",
        "}"
    ],
    "uninstaller": {
        "script": [
            "if ($cmd -eq 'uninstall')",
            "{",
            "   reg import \"$dir\\uninstall-context.reg\" ",
            "   reg import \"$dir\\uninstall-associations.reg\" ",
            "}"
        ]
    },
    "checkver": {
        "github": "https://github.com/voideditor/binaries"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/voideditor/binaries/releases/download/$version/Void-win32-x64-$version.zip"
            },
            "arm64": {
                "url": "https://github.com/voideditor/binaries/releases/download/$version/Void-win32-arm64-$version.zip"
            }
        },
        "hash": {
            "url": "$url.sha256"
        }
    }
}
