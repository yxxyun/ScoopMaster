{
    "version": "0.0.1",
    "description": "安装archlinux",
    "homepage": "https://gitlab.archlinux.org/archlinux/archlinux-wsl",
    "license": "Freeware",
    "depends": [
        "Chuckie_s/microsoft-wsl",
        "Chuckie_s/wsldl_arch",
        "main/chezmoi"
    ],
    "architecture": {
        "64bit": {
            "url": "https://mirrors.tuna.tsinghua.edu.cn/archlinux/wsl/latest/archlinux.wsl"
        }
    },
    "pre_install": [
        "if (!(is_admin)) { error \"$app requires admin rights to $cmd\"; break }",
        "if ($null -eq (Get-Command 'wslconfig' -ErrorAction SilentlyContinue)) {",
        "    warn 'WSL appears not to be enabled!'",
        "    warn 'Run ''Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux'''",
        "    warn 'from an elevated PowerShell. Restart your computer when prompted and reinstall ArchWSL.'",
        "    error \"$app requires WSL to run\"",
        "    break",
        "}"
    ],
    "installer": {
        "script": [
            "& Arch 'isregd'",
            "if ($?) {",
            "    Write-Host 'your customized archlinux is already registered.'",
            "    warn 'your customized archlinux is already registered'",
            "    break",
            "}",
            "ensure \"$persist_dir\\data\" | Out-Null",
            "Copy-Item \"$(appdir wsldl_arch $global)\\current\\Arch.exe\" \"$persist_dir\\data\\Arch.exe\"",
            "$res = Invoke-ExternalCommand \"$persist_dir\\data\\Arch.exe\" 'install', \"$dir\\archlinux.wsl\"",
            "Remove-Item \"$persist_dir\\data\\Arch.exe\" -Force",
            "if(!$res) { error 'ArchWsl installation failed!'; return }"
        ]
    },
    "post_install": [
        "Remove-Item \"$dir\\archlinux.wsl\" -Force -ErrorAction SilentlyContinue"
    ],
    "pre_uninstall": [""],
    "uninstaller": {
        "script": [
            "if ($cmd -ne 'uninstall') { return }",
            "$res = Invoke-ExternalCommand Arch 'isregd'",
            "if(!$res) { error 'ArchWsl is not registered!'; return }",
            "Invoke-ExternalCommand Arch 'clean', '-y' | Out-Null"
        ]
    },
    "persist": "data"
}
