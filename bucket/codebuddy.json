{
    "version": "0.1.16.3801649",
    "description": "腾讯云代码助手 CodeBuddy - AI 时代的智能编程伙伴，集成设计到开发的全栈 IDE",
    "homepage": "https://www.codebuddy.ai/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://www.codebuddy.ai/genie/document/privacyPolicy"
    },
    "notes": [
        "CodeBuddy 是腾讯云推出的 AI 驱动的全栈开发 IDE，主要功能：",
        "- AI 代码补全：智能实时代码预测和自动补全",
        "- AI 设计生成：将手绘概念转换为高保真交互原型",
        "- 设计转代码：将 Figma 设计转换为生产就绪代码",
        "- AI 全栈开发：多文件代码生成和重构的完整软件开发代理",
        "- 内置 BaaS 集成：零配置 Supabase 集成，提供即时数据库和身份验证",
        "- 一键部署：从开发到实时演示，秒级完成",
        "",
        "首次使用需要登录腾讯云账号并获取邀请码。",
        "邀请码申请：https://wj.qq.com/s2/22240515/0ac5"
    ],
    "architecture": {
        "64bit": {
            "url": "https://codebuddy-1328495429.cos.accelerate.myqcloud.com/aiide/win32-x64-user/CodeBuddy-win32-x64-user-0.1.16.3801649-9584b68f.exe",
            "hash": "bc908694a0b3bae143cc0945c10c1b75ce1c26c922a19b6a63e508fad280239e"
        }
    },
    "innosetup": true,
    "extract_dir": "{code_GetDestDir}",
    "shortcuts": [
        [
            "CodeBuddy.exe",
            "CodeBuddy"
        ]
    ],
    "post_install": [
        "# Create data directories",
        "New-Item -ItemType Directory -Path \"$dir\\data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\user-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\extension-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\codebuddy-config\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\codebuddy-config\" -Force | Out-Null",
        "",
        "# Copy existing data if present",
        "if ((Test-Path \"$env:AppData\\CodeBuddy\") -and !(Test-Path \"$dir\\data\\user-data\\*\")) {",
        "  info '[Portable Mode] Copying existing user data...'",
        "  Copy-Item \"$env:AppData\\CodeBuddy\\*\" \"$dir\\data\\user-data\" -Recurse -Force",
        "}",
        "",
        "if ((Test-Path \"$env:LocalAppData\\CodeBuddyExtension\") -and !(Test-Path \"$dir\\data\\extension-data\\*\")) {",
        "  info '[Portable Mode] Copying existing extension data...'",
        "  Copy-Item \"$env:LocalAppData\\CodeBuddyExtension\\*\" \"$dir\\data\\extension-data\" -Recurse -Force",
        "}",
        "",
        "if ((Test-Path \"$env:USERPROFILE\\.codebuddy\") -and !(Test-Path \"$dir\\data\\codebuddy-config\\*\")) {",
        "  info '[Portable Mode] Copying existing CodeBuddy config...'",
        "  Copy-Item \"$env:USERPROFILE\\.codebuddy\\*\" \"$dir\\data\\codebuddy-config\" -Recurse -Force",
        "}",
        "",
        "# Define paths for junction points",
        "$appDataPath = \"$env:AppData\\CodeBuddy\"",
        "$localAppDataPath = \"$env:LocalAppData\\CodeBuddyExtension\"",
        "$userProfilePath = \"$env:USERPROFILE\\.codebuddy\"",
        "",
        "# Remove existing directories/links if they exist",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Recurse -Force",
        "}",
        "if (Test-Path $localAppDataPath) {",
        "  Remove-Item $localAppDataPath -Recurse -Force",
        "}",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Recurse -Force",
        "}",
        "",
        "# Create junction points",
        "try {",
        "  New-Item -ItemType Junction -Path $appDataPath -Target \"$dir\\data\\user-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %APPDATA%\\CodeBuddy -> scoop\\data\\user-data'",
        "} catch {",
        "  warn 'Failed to create junction for user data: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $localAppDataPath -Target \"$dir\\data\\extension-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %LOCALAPPDATA%\\CodeBuddyExtension -> scoop\\data\\extension-data'",
        "} catch {",
        "  warn 'Failed to create junction for extension data: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $userProfilePath -Target \"$dir\\data\\codebuddy-config\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: ~/.codebuddy -> scoop\\data\\codebuddy-config'",
        "} catch {",
        "  warn 'Failed to create junction for CodeBuddy config: $_'",
        "}",
        ""
    ],
    "pre_uninstall": [
        "# Clean up junction points",
        "$appDataPath = \"$env:AppData\\CodeBuddy\"",
        "$localAppDataPath = \"$env:LocalAppData\\CodeBuddyExtension\"",
        "$userProfilePath = \"$env:USERPROFILE\\.codebuddy\"",
        "",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed junction: %APPDATA%\\CodeBuddy'",
        "}",
        "",
        "if (Test-Path $localAppDataPath) {",
        "  Remove-Item $localAppDataPath -Force",
        "  info '[Portable Mode] Removed junction: %LOCALAPPDATA%\\CodeBuddyExtension'",
        "}",
        "",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "  info '[Portable Mode] Removed junction: ~/.codebuddy'",
        "}",
        ""
    ],
    "persist": "data",
    "checkver": {
        "url": "https://www.codebuddy.ai/v2/update?platform=ide-win32-x64-user",
        "jsonpath": "$.url",
        "regex": "(?<url>.*CodeBuddy-win32-x64-user-(?<version>[\\d.]+)-.*\\.exe)",
        "replace": "${version}"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "$matchUrl"
            }
        }
    }
}
