{
    "version": "1.6.42",
    "description": "Built to make you extraordinarily productive, Cursor is the best way to code with AI.",
    "homepage": "https://www.cursor.com/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://www.cursor.com/terms-of-service"
    },
    "architecture": {
        "64bit": {
            "url": "https://downloads.cursor.com/production/5911e9593196a000b1c00553aaf03b0b32042b93/win32/x64/user-setup/CursorUserSetup-x64-1.6.42.exe",
            "hash": "f8ee0e0dd3a144041c2488a9bbb0cc7fdea9e8ee803ef5943e0dabd7cb800d85"
        }
    },
    "innosetup": true,
    "extract_dir": "{code_GetDestDir}",
    "shortcuts": [
        [
            "Cursor.exe",
            "Cursor",
            "--user-data-dir=\"%SCOOP%\\apps\\cursor\\current\\data\\user-data\""
        ]
    ],
    "post_install": [
        "# Create data directories",
        "New-Item -ItemType Directory -Path \"$dir\\data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\user-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\local-programs\" -Force | Out-Null",
        "",
        "# Copy %USERPROFILE%\\.cursor to data (includes extensions and all config)",
        "if ((Test-Path \"$env:USERPROFILE\\.cursor\") -and !(Test-Path \"$dir\\data\\*\")) {",
        "  info '[Portable Mode] Copying existing user configuration...'",
        "  Copy-Item \"$env:USERPROFILE\\.cursor\\*\" \"$dir\\data\" -Recurse -Force",
        "}",
        "",
        "# Copy %APPDATA%\\Cursor to user-data",
        "if ((Test-Path \"$env:AppData\\Cursor\") -and !(Test-Path \"$dir\\data\\user-data\\*\")) {",
        "  info '[Portable Mode] Copying existing AppData configuration...'",
        "  Copy-Item \"$env:AppData\\Cursor\\*\" \"$dir\\data\\user-data\" -Recurse -Force",
        "}",
        "",
        "# Copy %LOCALAPPDATA%\\Programs\\cursor to local-programs",
        "if ((Test-Path \"$env:LocalAppData\\Programs\\cursor\") -and !(Test-Path \"$dir\\data\\local-programs\\*\")) {",
        "  info '[Portable Mode] Copying existing local programs...'",
        "  Copy-Item \"$env:LocalAppData\\Programs\\cursor\\*\" \"$dir\\data\\local-programs\" -Recurse -Force",
        "}",
        "",
        "# Define paths for junction points",
        "$appDataPath = \"$env:AppData\\Cursor\"",
        "$userProfilePath = \"$env:USERPROFILE\\.cursor\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\cursor\"",
        "",
        "# Remove existing directories/links if they exist",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "}",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "}",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "}",
        "",
        "# Create junction points",
        "try {",
        "  New-Item -ItemType Junction -Path $userProfilePath -Target \"$dir\\data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: ~/.cursor -> scoop\\data'",
        "} catch {",
        "  warn 'Failed to create junction for user profile configuration: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $appDataPath -Target \"$dir\\data\\user-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %APPDATA%\\Cursor -> scoop\\data\\user-data'",
        "} catch {",
        "  warn 'Failed to create junction for AppData configuration: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $localProgramsPath -Target \"$dir\\data\\local-programs\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %LOCALAPPDATA%\\Programs\\cursor -> scoop\\data\\local-programs'",
        "} catch {",
        "  warn 'Failed to create junction for local programs: $_'",
        "}",
        "",
        "# Adjust extensions path",
        "$extensions_file = \"$dir\\data\\extensions\\extensions.json\"",
        "if ((Test-Path \"$extensions_file\")) {",
        "  info 'Adjusting path in extensions file...'",
        "    (Get-Content \"$extensions_file\") -replace '(?<=cursor(/|\\\\\\\\)).*?(?=(/|\\\\\\\\)data(/|\\\\\\\\)extensions)', $version | Set-Content \"$extensions_file\"",
        "}",
        ""
    ],
    "pre_uninstall": [
        "# Clean up junction points",
        "$appDataPath = \"$env:AppData\\Cursor\"",
        "$userProfilePath = \"$env:USERPROFILE\\.cursor\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\cursor\"",
        "",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed junction: %APPDATA%\\Cursor'",
        "}",
        "",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "  info '[Portable Mode] Removed junction: ~/.cursor'",
        "}",
        "",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "  info '[Portable Mode] Removed junction: %LOCALAPPDATA%\\Programs\\cursor'",
        "}",
        ""
    ],
    "persist": "data",
    "checkver": {
        "url": "https://api2.cursor.sh/updates/api/update/win32-x64-archive/cursor/0.0.0/stable",
        "jsonpath": "$.url",
        "regex": "(?<url>.*CursorUserSetup-x64-(?<version>[\\d.]+)\\.exe)",
        "replace": "${version}"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "$matchUrl"
            }
        }
    }
}
