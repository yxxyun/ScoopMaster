{
    "version": "20240501-1610",
    "description": "BeatLeader's ranked playlists by stars.",
    "homepage": "https://github.com/ranmd9a/beatleader-ranked",
    "license": "Unknown",
    "url": "https://github.com/ranmd9a/beatleader-ranked/releases/download/latest/beatleader_ranked_all.zip",
    "hash": "1e6077d374aec6b08a59097b5e43fbb6ba93e177e2fdc21ad55ef5223a7b2730",
    "checkver": {
        "url": "https://api.github.com/repos/ranmd9a/beatleader-ranked/releases/latest",
        "jsonpath": "$.name",
        "regex": "([\\d-]+)"
    },
    "autoupdate": {
        "url": "https://github.com/ranmd9a/beatleader-ranked/releases/download/latest/beatleader_ranked_all.zip"
    },
    "post_install": [
        "$scriptFile = Join-Path -Path \"$dir\" -ChildPath \"InstallSymbolicLinks.ps1\"",
        "New-Item -Path \"$ScriptFile\" -ItemType \"file\" -Force | Out-Null",
        "$script = @\"",
        "param (",
        "   [string]`$PlaylistsPath",
        ")",
        "function Create-SymbolicLink {",
        "   param (",
        "       [string]`$SourcePath,",
        "       [string]`$DestinationPath",
        "   )",
        "   if (Test-Path -Path `$DestinationPath) {",
        "       if ((Get-Item `$DestinationPath).Attributes -match \"ReparsePoint\") {",
        "           Remove-Item -Path `$DestinationPath -Force",
        "       } else {",
        "           Write-Error \"Destination path `$DestinationPath already exists and is not a symbolic link.\"",
        "           return",
        "       }",
        "   }",
        "   New-Item -ItemType SymbolicLink -Path `$DestinationPath -Value `$SourcePath | Out-Null",
        "}",
        "`$DefaultPlaylistsPath = \"C:\\Program Files (x86)\\Steam\\steamapps\\common\\Beat Saber\\Playlists\"",
        "if ([string]::IsNullOrEmpty(`$PlaylistsPath)) {",
        "   if ([System.IO.Directory]::Exists(`$DefaultPlaylistsPath)) {",
        "       Write-Host \"Default path: `$DefaultPlaylistsPath\"",
        "       `$PlaylistsPath = Read-Host \"Enter the path to the directory containing Playlists (leave blank to use the default)\"",
        "       if ([string]::IsNullOrEmpty(`$PlaylistsPath)) {",
        "           `$PlaylistsPath = `$DefaultPlaylistsPath",
        "       }",
        "   } else {",
        "       `$PlaylistsPath = Read-Host \"Enter the Playlists path\"",
        "   }",
        "}",
        "if (![System.IO.Directory]::Exists(`$PlaylistsPath)) {",
        "   Write-Error \"Invalid Playlists path: `$PlaylistsPath\"",
        "   exit 1",
        "}",
        "Get-ChildItem -Path `$PSScriptRoot -Filter \"beatleader*.json\" | ForEach-Object {",
        "   `$SourcePath = `$_.FullName",
        "   `$DestinationPath = Join-Path -Path `$PlaylistsPath -ChildPath (`$_.Name -replace '.json', '.bplist')",
        "   Create-SymbolicLink -SourcePath `$SourcePath -DestinationPath `$DestinationPath",
        "}",
        "\"@",
        "Set-Content -Path \"$ScriptFile\" -Value $script",
        "if (Test-Path -Path \"$persist_dir\\.post_install_arg\") {",
        "   $PlaylistsPath = Get-Content -Path \"$persist_dir\\.post_install_arg\"",
        "   . \"$ScriptFile\" -PlaylistsPath \"$PlaylistsPath\"",
        "}"
    ],
    "notes": [
        "Create symbolic links to the playlists located at $(scoop prefix beatleader-ranked) in the Playlists direcotory of BeatSaber to keep them updated with scoop.",
        "You can run \"$(scoop prefix beatleader-ranked)\\InstallSymbolicLinks.ps1\" to create all links at once.",
        "To automatically create the links when beatleader-ranked is installed/updated, create a file named .post_install_arg in the persist directory and put the path to the Playlists directory in it.",
        "The persist directory typically defaults to $HOME\\scoop\\persist\\beatleader-ranked",
        "Uninstalling the app will not remove the symbolic links. You will need to remove them manually."
    ]
}
