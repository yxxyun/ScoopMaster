{
    "homepage": "https://im.qq.com/pcqq/index.shtml",
    "description": "(LiteLoaderQQNT patch) An instant messaging software service developed by Tencent, build with Electron.",
    "license": {
        "identifier": "Proprietary",
        "url": "https://ti.qq.com/agreement/index.html"
    },
    "version": "9.9.15.240808",
    "depends": [
        "air/DllHijack",
        "LiteLoaderQQNT"
    ],
    "architecture": {
        "64bit": {
            "url": "https://dldir1.qq.com/qqfile/qq/QQNT/Windows/QQ_9.9.15_240808_x64_01.exe#/dl.7z",
            "hash": "07d1cb0f57d8a6ec78cd03a5a76d09a79bc306a78c49b0dd6203d875dee36828"
        },
        "32bit": {
            "url": "https://dldir1.qq.com/qqfile/qq/QQNT/Windows/QQ_9.9.15_240808_x86_01.exe#/dl.7z",
            "hash": "316227c90e99f9ded6687cd046e99189352d43d5cdb4823b95d9ed5fd6e1351c"
        },
        "arm64": {
            "url": "https://dldir1.qq.com/qqfile/qq/QQNT/Windows/QQ_9.9.15_240808_arm64_01.exe#/dl.7z",
            "hash": "ce7efbd626eaa9238fa84ba8ba91b422152e8ea3a6c4fcb26810555de90d2851"
        }
    },
    "extract_dir": "Files",
    "shortcuts": [
        [
            "QQ.exe",
            "QQNT"
        ]
    ],
    "pre_install": [
        "$patch_json = \"$persist_dir\\PatchConfig.json\"",
        "if (!(Test-Path \"$patch_json\")) {",
        "    $liteLoaderPath = \"$(appdir LiteLoaderQQNT $global)\\current\"",
        "    $patchConfig = @{ LLPath = $liteLoaderPath } | ConvertTo-Json",
        "    New-Item -Path \"$patch_json\" -ItemType File -Value $patchConfig -Force | Out-Null",
        "}"
    ],
    "persist": "PatchConfig.json",
    "post_install": [
        "$hijackDllPath = \"$(appdir DllHijack $global)\\current\\dbghelp.dll\"",
        "$qqntDllPath = \"$dir\\dbghelp.dll\"",
        "Copy-Item \"$hijackDllPath\" \"$qqntDllPath\" -Force"
    ],
    "checkver": {
        "script": [
            "$html = Invoke-WebRequest -Uri \"https://im.qq.com/pcqq/index.shtml\" -UseBasicParsing",
            "$regex1 = '//.*/im.qq.com_new/.*/windowsDownloadUrl\\.js(\\?t=[0-9]+)?'",
            "$links = ([regex]::Matches($html.Content, $regex1)).value",
            "$allContent = $links | ForEach-Object { (Invoke-WebRequest -Uri ('https:' + $_) -UseBasicParsing).Content } | Out-String",
            "$regex2 = 'QQNT/Windows/QQ_([0-9.]+)_([0-9]+)_x64_01.exe'",
            "(([regex]::Matches($allContent, $regex2)).value | Sort-Object -Descending -CaseSensitive)[0] | Out-String"
        ],
        "regex": "QQNT/Windows/QQ_([\\d\\.]+)_([\\d]+)_x64_01.exe",
        "replace": "${1}.${2}"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://dldir1.qq.com/qqfile/qq/QQNT/Windows/QQ_$match1_$match2_x64_01.exe#/dl.7z"
            },
            "32bit": {
                "url": "https://dldir1.qq.com/qqfile/qq/QQNT/Windows/QQ_$match1_$match2_x86_01.exe#/dl.7z"
            },
            "arm64": {
                "url": "https://dldir1.qq.com/qqfile/qq/QQNT/Windows/QQ_$match1_$match2_arm64_01.exe#/dl.7z"
            }
        }
    }
}
