{
    "version": "0.4.0",
    "description": "Kiro is Amazon's agentic IDE built for working with AWS, powered by Claude AI",
    "homepage": "https://kiro.dev/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://kiro.dev/license/"
    },
    "architecture": {
        "64bit": {
            "url": "https://prod.download.desktop.kiro.dev/releases/202510142329-Kiro-win32-x64.exe",
            "hash": "3bc2c79f43868c7a79d2f20d343bab78e2b3b8e3d8b1404a8a0e8b01e6ad63fd"
        }
    },
    "innosetup": true,
    "extract_dir": "{code_GetDestDir}",
    "shortcuts": [
        [
            "Kiro.exe",
            "Kiro"
        ]
    ],
    "post_install": [
        "# Create data directories",
        "New-Item -ItemType Directory -Path \"$dir\\data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\user-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\local-programs\" -Force | Out-Null",
        "",
        "# Copy %USERPROFILE%\\.kiro to data (includes extensions and all config)",
        "if ((Test-Path \"$env:USERPROFILE\\.kiro\") -and !(Test-Path \"$dir\\data\\*\")) {",
        "  info '[Portable Mode] Copying existing user configuration...'",
        "  Copy-Item \"$env:USERPROFILE\\.kiro\\*\" \"$dir\\data\" -Recurse -Force",
        "}",
        "",
        "# Copy %APPDATA%\\Kiro to user-data",
        "if ((Test-Path \"$env:AppData\\Kiro\") -and !(Test-Path \"$dir\\data\\user-data\\*\")) {",
        "  info '[Portable Mode] Copying existing AppData configuration...'",
        "  Copy-Item \"$env:AppData\\Kiro\\*\" \"$dir\\data\\user-data\" -Recurse -Force",
        "}",
        "",
        "# Copy %LOCALAPPDATA%\\Programs\\kiro to local-programs",
        "if ((Test-Path \"$env:LocalAppData\\Programs\\kiro\") -and !(Test-Path \"$dir\\data\\local-programs\\*\")) {",
        "  info '[Portable Mode] Copying existing local programs...'",
        "  Copy-Item \"$env:LocalAppData\\Programs\\kiro\\*\" \"$dir\\data\\local-programs\" -Recurse -Force",
        "}",
        "",
        "# Define paths for symbolic links",
        "$appDataPath = \"$env:AppData\\Kiro\"",
        "$userProfilePath = \"$env:USERPROFILE\\.kiro\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\kiro\"",
        "",
        "# Remove existing directories/links if they exist",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "}",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "}",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "}",
        "",
        "# Create symbolic links",
        "try {",
        "  New-Item -ItemType SymbolicLink -Path $userProfilePath -Target \"$dir\\data\" -Force | Out-Null",
        "  info '[Portable Mode] Created symbolic link: ~/.kiro -> scoop\\data'",
        "} catch {",
        "  warn 'Failed to create symbolic link for user profile configuration: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType SymbolicLink -Path $appDataPath -Target \"$dir\\data\\user-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created symbolic link: %APPDATA%\\Kiro -> scoop\\data\\user-data'",
        "} catch {",
        "  warn 'Failed to create symbolic link for AppData configuration: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType SymbolicLink -Path $localProgramsPath -Target \"$dir\\data\\local-programs\" -Force | Out-Null",
        "  info '[Portable Mode] Created symbolic link: %LOCALAPPDATA%\\Programs\\kiro -> scoop\\data\\local-programs'",
        "} catch {",
        "  warn 'Failed to create symbolic link for local programs: $_'",
        "}",
        "",
        "# Adjust extensions path",
        "$extensions_file = \"$dir\\data\\extensions\\extensions.json\"",
        "if ((Test-Path \"$extensions_file\")) {",
        "  info 'Adjusting path in extensions file...'",
        "    (Get-Content \"$extensions_file\") -replace '(?<=kiro(/|\\\\\\\\)).*?(?=(/|\\\\\\\\)data(/|\\\\\\\\)extensions)', $version | Set-Content \"$extensions_file\"",
        "}",
        ""
    ],
    "pre_uninstall": [
        "# Clean up symbolic links",
        "$appDataPath = \"$env:AppData\\Kiro\"",
        "$userProfilePath = \"$env:USERPROFILE\\.kiro\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\kiro\"",
        "",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed symbolic link: %APPDATA%\\Kiro'",
        "}",
        "",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "  info '[Portable Mode] Removed symbolic link: ~/.kiro'",
        "}",
        "",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "  info '[Portable Mode] Removed symbolic link: %LOCALAPPDATA%\\Programs\\kiro'",
        "}",
        ""
    ],
    "persist": "data",
    "checkver": {
        "url": "https://prod.download.desktop.kiro.dev/stable/metadata-win32-x64-user-stable.json",
        "regex": "\"version\":\"(?<version>[\\d.]+)\".*?\"url\":\"(?<url>[^\"]*Kiro-win32-x64\\.exe)\"",
        "replace": "${version}"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "$matchUrl"
            }
        }
    }
}
