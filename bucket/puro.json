{
    "version": "1.4.11",
    "description": "强大的 Flutter 版本管理工具，支持多版本并行使用和快速安装",
    "homepage": "https://puro.dev",
    "license": "MIT",
    "notes": [
        "Puro 是一个高性能的 Flutter 版本管理工具，类似于 Node.js 的 nvm",
        "主要功能：",
        "- 同时使用不同版本的 Flutter",
        "- 快速下载和安装，节省磁盘空间和网络带宽",
        "- 支持全局和项目级版本管理",
        "- 自动配置 IDE 设置",
        "",
        "数据目录：",
        "- Scoop 版本使用 Scoop 管理的数据目录（便携模式）",
        "- 首次安装时会自动迁移 ~/.puro 中的现有数据",
        "- 数据目录位置：%SCOOP%\\apps\\puro\\current\\data",
        "- 安装时会自动运行 'puro install-puro' 配置 PATH 和符号链接",
        "",
        "常用命令：",
        "puro flutter doctor    # 安装最新稳定版 Flutter",
        "puro create foo stable # 创建名为 'foo' 的稳定版环境",
        "puro use -g beta       # 全局切换到 beta 版本",
        "puro ls                # 列出所有环境",
        "puro releases          # 列出可用的 Flutter 版本"
    ],
    "url": "https://puro.dev/builds/1.4.11/windows-x64/puro.exe",
    "hash": "2429e2d0276e92871ace266120415e13cc98ee1b9ab785f03a3e27c0c8f0a679",
    "bin": "puro.exe",
    "env_add_path": "data\\envs\\default\\flutter\\bin",
    "env_set": {
        "PURO_ROOT": "$dir\\data"
    },
    "persist": "data",
    "post_install": [
        "if (!(Test-Path \"$dir\\data\") -and (Test-Path \"$env:USERPROFILE\\.puro\")) {",
        "  info '[Portable Mode] Migrating existing puro data...'",
        "  Copy-Item \"$env:USERPROFILE\\.puro\" \"$dir\\data\" -Recurse",
        "  info 'Original data preserved at: $env:USERPROFILE\\.puro'",
        "  info 'You can safely delete it after confirming everything works correctly.'",
        "}",
        "info 'Running puro install-puro to configure PATH...'",
        "& \"$dir\\puro.exe\" install-puro"
    ],
    "checkver": {
        "github": "https://github.com/pingbird/puro"
    },
    "autoupdate": {
        "url": "https://puro.dev/builds/$version/windows-x64/puro.exe"
    }
}
