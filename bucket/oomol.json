{
    "version": "1.1.2",
    "description": "AI 可编程工作流平台 - 基于 VSCode 的工作流 IDE",
    "homepage": "https://oomol.com/zh-CN/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://oomol.com/zh-CN/"
    },
    "architecture": {
        "64bit": {
            "url": "https://downloads.cursor.com/production/87ea1604be1f602f173c5fb67582e647fcef6c48/win32/x64/user-setup/CursorUserSetup-x64-1.1.2.exe",
            "hash": "114f8e76fc500de3caf7ce40d903abc8e3bf50c6579a03ec963cf7140630683c"
        }
    },
    "innosetup": true,
    "extract_dir": "{code_GetDestDir}",
    "shortcuts": [
        [
            "OOMOL Studio.exe",
            "OOMOL Studio",
            "--user-data-dir=\"%SCOOP%\\apps\\oomol\\current\\data\\user-data\" --extensions-dir=\"%SCOOP%\\apps\\oomol\\current\\data\\extensions\""
        ]
    ],
    "post_install": [
        "if (!(Test-Path \"$dir\\data\\extensions\") -and (Test-Path \"$env:USERPROFILE\\.oomol\\extensions\")) {",
        "  info '[Portable Mode] Copying extensions...'",
        "  Copy-Item \"$env:USERPROFILE\\.oomol\\extensions\" \"$dir\\data\" -Recurse",
        "}",
        "if (!(Test-Path \"$dir\\data\\user-data\") -and (Test-Path \"$env:AppData\\OOMOL Studio\")) {",
        "  info '[Portable Mode] Copying user data...'",
        "  Copy-Item \"$env:AppData\\OOMOL Studio\" \"$dir\\data\\user-data\" -Recurse",
        "}",
        "$extensions_file = \"$dir\\data\\extensions\\extensions.json\"",
        "if ((Test-Path \"$extensions_file\")) {",
        "  info 'Adjusting path in extensions file...'",
        "    (Get-Content \"$extensions_file\") -replace '(?<=oomol(/|\\\\\\\\)).*?(?=(/|\\\\\\\\)data(/|\\\\\\\\)extensions)', $version | Set-Content \"$extensions_file\"",
        "}"
    ],
    "persist": "data",
    "checkver": {
        "script": [
            "$response = Invoke-WebRequest -Uri 'https://update.oomol.com/latest/win32-x64-user/stable' -MaximumRedirection 0 -ErrorAction SilentlyContinue",
            "$url = $response.Headers.Location",
            "if ($url -match 'Studio-([0-9.]+)-') { $url }"
        ],
        "regex": "(?<url>.*Studio-(?<version>[\\d.]+)-.*\\.exe)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "$matchUrl"
            }
        }
    }
}
