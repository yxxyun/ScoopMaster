{
    "version": "1.4.2",
    "description": "AI 可编程工作流平台 - 基于 VSCode 的工作流 IDE",
    "homepage": "https://oomol.com/zh-CN/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://oomol.com/zh-CN/terms/"
    },
    "architecture": {
        "64bit": {
            "url": "https://static.oomol.com/release/stable/win32/x64/OOMOL Studio-1.4.2-2025-09-09.16.exe",
            "hash": "2c39fd8a05a5603702a057339959986cfed4bd5a180c013089e9d98d4c364d9d"
        }
    },
    "innosetup": true,
    "extract_dir": "{code_GetDestDir}",
    "shortcuts": [
        [
            "OOMOL Studio.exe",
            "OOMOL Studio"
        ]
    ],
    "post_install": [
        "# Create data directories",
        "New-Item -ItemType Directory -Path \"$dir\\data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\user-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\local-programs\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\.oomol-studio\" -Force | Out-Null",
        "",
        "# Copy %USERPROFILE%\\.oomol-studio-data to data (includes extensions and all config)",
        "if ((Test-Path \"$env:USERPROFILE\\.oomol-studio-data\") -and !(Test-Path \"$dir\\data\\*\")) {",
        "  info '[Portable Mode] Copying existing user configuration...'",
        "  Copy-Item \"$env:USERPROFILE\\.oomol-studio-data\\*\" \"$dir\\data\" -Recurse -Force",
        "}",
        "",
        "# Copy %APPDATA%\\OOMOL Studio to user-data",
        "if ((Test-Path \"$env:AppData\\OOMOL Studio\") -and !(Test-Path \"$dir\\data\\user-data\\*\")) {",
        "  info '[Portable Mode] Copying existing AppData configuration...'",
        "  Copy-Item \"$env:AppData\\OOMOL Studio\\*\" \"$dir\\data\\user-data\" -Recurse -Force",
        "}",
        "",
        "# Copy %LOCALAPPDATA%\\Programs\\oomol to local-programs",
        "if ((Test-Path \"$env:LocalAppData\\Programs\\oomol\") -and !(Test-Path \"$dir\\data\\local-programs\\*\")) {",
        "  info '[Portable Mode] Copying existing local programs...'",
        "  Copy-Item \"$env:LocalAppData\\Programs\\oomol\\*\" \"$dir\\data\\local-programs\" -Recurse -Force",
        "}",
        "",
        "# Copy %USERPROFILE%\\.oomol-studio to .oomol-studio",
        "if ((Test-Path \"$env:USERPROFILE\\.oomol-studio\") -and !(Test-Path \"$dir\\data\\.oomol-studio\\*\")) {",
        "  info '[Portable Mode] Copying existing .oomol-studio data...'",
        "  Copy-Item \"$env:USERPROFILE\\.oomol-studio\\*\" \"$dir\\data\\.oomol-studio\" -Recurse -Force",
        "}",
        "",
        "# Define paths for junction points",
        "$appDataPath = \"$env:AppData\\OOMOL Studio\"",
        "$userProfilePath = \"$env:USERPROFILE\\.oomol-studio-data\"",
        "$userProfileStudioPath = \"$env:USERPROFILE\\.oomol-studio\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\oomol\"",
        "",
        "# Remove existing directories/links if they exist",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "}",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "}",
        "if (Test-Path $userProfileStudioPath) {",
        "  Remove-Item $userProfileStudioPath -Force",
        "}",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "}",
        "",
        "# Create junction points",
        "try {",
        "  New-Item -ItemType Junction -Path $userProfilePath -Target \"$dir\\data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: ~/.oomol-studio-data -> scoop\\data'",
        "} catch {",
        "  warn 'Failed to create junction for user profile configuration: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $appDataPath -Target \"$dir\\data\\user-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %APPDATA%\\OOMOL Studio -> scoop\\data\\user-data'",
        "} catch {",
        "  warn 'Failed to create junction for AppData configuration: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $localProgramsPath -Target \"$dir\\data\\local-programs\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %LOCALAPPDATA%\\Programs\\oomol -> scoop\\data\\local-programs'",
        "} catch {",
        "  warn 'Failed to create junction for local programs: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $userProfileStudioPath -Target \"$dir\\data\\.oomol-studio\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: ~/.oomol-studio -> scoop\\data\\.oomol-studio'",
        "} catch {",
        "  warn 'Failed to create junction for .oomol-studio: $_'",
        "}",
        "",
        "# Adjust extensions path",
        "$extensions_file = \"$dir\\data\\extensions\\extensions.json\"",
        "if ((Test-Path \"$extensions_file\")) {",
        "  info 'Adjusting path in extensions file...'",
        "    (Get-Content \"$extensions_file\") -replace '(?<=oomol(/|\\\\\\\\)).*?(?=(/|\\\\\\\\)data(/|\\\\\\\\)extensions)', $version | Set-Content \"$extensions_file\"",
        "}",
        ""
    ],
    "pre_uninstall": [
        "# Clean up junction points",
        "$appDataPath = \"$env:AppData\\OOMOL Studio\"",
        "$userProfilePath = \"$env:USERPROFILE\\.oomol-studio-data\"",
        "$userProfileStudioPath = \"$env:USERPROFILE\\.oomol-studio\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\oomol\"",
        "",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed junction: %APPDATA%\\OOMOL Studio'",
        "}",
        "",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "  info '[Portable Mode] Removed junction: ~/.oomol-studio-data'",
        "}",
        "",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "  info '[Portable Mode] Removed junction: %LOCALAPPDATA%\\Programs\\oomol'",
        "}",
        "",
        "if (Test-Path $userProfileStudioPath) {",
        "  Remove-Item $userProfileStudioPath -Force",
        "  info '[Portable Mode] Removed junction: ~/.oomol-studio'",
        "}",
        ""
    ],
    "persist": "data",
    "checkver": {
        "script": [
            "try {",
            "    $response = Invoke-WebRequest -Uri 'https://update.oomol.com/latest/win32-x64-user/stable' -MaximumRedirection 0 -ErrorAction Stop",
            "} catch {",
            "    if ($_.Exception.Response.StatusCode -eq 302) {",
            "        $url = $_.Exception.Response.Headers.Location",
            "    }",
            "}",
            "if ($url -match 'Studio-([0-9.]+)-') { $url }"
        ],
        "regex": "(?<url>.*Studio-(?<version>[\\d.]+)-.*\\.exe)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "$matchUrl"
            }
        }
    }
}
